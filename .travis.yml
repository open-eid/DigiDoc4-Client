language: c++
sudo: true
dist: trusty
osx_image: xcode8.3
services:
- docker
matrix:
  include:
  - os: osx
    env: TARGET=osx
    sudo: true
  - os: linux
    env: TARGET=ubuntu:17.04
    sudo: false
env:
  global:
  - BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}
before_install: 
- git submodule update --init --recursive && if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    command curl -sSL https://rvm.io/mpapis.asc | gpg --import -;
    rvm get stable;
    brew install --force openssl;
    curl -s --location "https://bootstrap.pypa.io/get-pip.py" -o get-pip.py;
    python get-pip.py --user;
    curl -s --location "https://github.com/open-eid/libdigidoc/releases/download/v3.10.3/libdigidoc_3.10.3.1214.pkg" -o libdigidoc.pkg;
    curl -s --location "https://github.com/open-eid/libdigidocpp/releases/download/v3.13.2/libdigidocpp_3.13.2.1360.pkg" -o libdigidocpp.pkg;
    sudo installer -verboseR -pkg libdigidoc.pkg -target /;
    sudo installer -verboseR -pkg libdigidocpp.pkg -target /;
    HASH=($(shasum prepare_osx_build_environment.sh | cut -d ' ' -f 1));
    export PATH=$PATH:`echo ~/Library/Python/*/bin` ;
    pip install --user awscli > /dev/null;
    aws s3 cp s3://open-eid-digidoc4/cache/${TARGET}/opensc.pkg opensc.pkg --no-sign-request;
    sudo installer -verboseR -pkg opensc.pkg -target /;
    aws s3 cp s3://open-eid-digidoc4/cache/${TARGET}/${HASH}.zip ${HASH}.zip --no-sign-request;
    if [ $? -eq 0 ]; then
      unzip -qq -d /tmp ${HASH}.zip;
    fi
  fi
script: case ${TARGET} in
  *osx*)
    QT_DIR=$(ls -d /tmp/Qt-*-OpenSSL | tail -n 1);
    echo "Qt - ${QT_DIR}";
    set -e;
    mkdir build && cd build && cmake -DQt5_DIR=${QT_DIR}/lib/cmake/Qt5 -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_EXE_LINKER_FLAGS="-F/Library/Frameworks" ..;
    mkdir -p $BUILD_NUMBER;
    make zipdebug macdeployqt zip && cp qdigidoc4*.zip ./$BUILD_NUMBER/ && cd ..;
    ;;
  *)
    docker run -e BUILD_NUMBER=${TRAVIS_BUILD_NUMBER} -e DEBFULLNAME="Travis" -e DEBEMAIL="travis-ci@travis" -e IMAGE=${TARGET} -v $(pwd):$(pwd) -t "${TARGET}" /bin/bash -c "cd $(pwd);"'
      set -e;
      apt-get update -qq; 
      apt-get install -y apt-transport-https curl dh-make devscripts dpkg-dev cdbs cmake libldap2-dev libpcsclite-dev libssl-dev qtbase5-dev libqt5svg5-dev qttools5-dev qttools5-dev-tools gettext git curl wget ruby;
      curl https://installer.id.ee/media/install-scripts/ria-public.key | apt-key add -;
      curl https://installer.id.ee/media/install-scripts/C6C83D68.pub | apt-key add -;
      echo "deb http://installer.id.ee/media/ubuntu/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/repo.list;
      apt-get update -qq;
      apt-get install -y libdigidocpp-dev;
      export VERSION=$(grep project CMakeLists.txt | egrep -o "([0-9]{1,}\.)+[0-9]{1,}").${BUILD_NUMBER};
      dh_make --createorig --addmissing --defaultless -y -p qdigidoc4_${VERSION};
      dch --distribution $(lsb_release -cs) -v ${VERSION} "Release ${VERSION}.";
      dpkg-buildpackage -rfakeroot -us -uc;
      mkdir -p build/$BUILD_NUMBER;
      cp ../qdigidoc4_*.deb build/$BUILD_NUMBER';
  esac
deploy:
  provider: s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  region: $AWS_REGION
  bucket: digidoc4-builds
  skip_cleanup: true
  local_dir: build/$BUILD_NUMBER
  upload-dir: ${TARGET}
  acl: public_read
  on:
    branch: master
